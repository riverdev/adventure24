// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

@use "palettes.scss" as app;

@use "sass:map";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
//$playground-primary: mat.define-palette(mat.$orange-palette);
$playground-primary: mat.define-palette(app.$my-brown-palette);

//$playground-accent: mat.define-palette(mat.$cyan-palette, A200, A100, A400);
$playground-accent: mat.define-palette(
  app.$my-purple-palette,
  A200,
  A100,
  A400
);


// The warn palette is optional (defaults to red).
$playground-warn: mat.define-palette(mat.$red-palette);

// The mat-define sass function creates a custom color palette within a theme, 
// based on the input palette
$playground-success-palette: mat.define-palette(mat.$green-palette, 400, 100);

$playground-info-palette: mat.define-palette(mat.$blue-palette);

$my-theme-extension: (
  success: $playground-success-palette,
  info: $playground-info-palette,
  color: (
    success: $playground-success-palette,
    info: $playground-info-palette,
  ),
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$playground-theme: mat.define-light-theme(
  (
    color: (
      primary: $playground-primary,
      accent: $playground-accent,
      warn: $playground-warn,
    ),
  )
);

$my-merged-theme: map.deep-merge($playground-theme,$my-theme-extension);
// The '@debug' is like console log
// @debug $my-merged-theme;

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($playground-theme);
